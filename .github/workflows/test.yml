name: Testing

on:
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

concurrency:
  group: testing-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint_api:
    name: Lint API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Linting
        run: dotnet format --verify-no-changes

  test_api:
    name: Test API
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Tools
        run: dotnet tool restore

      - name: Tests
        run: dotnet test --blame-hang-timeout 1m --configuration Release --collect:"XPlat Code Coverage" --results-directory ./artifacts
      - uses: actions/upload-artifact@v3
        name: Upload Blame Dump
        if: failure()
        with:
          name: blame-dump
          path: artifacts/**/dotnet_*.dmp
          if-no-files-found: ignore

      - name: Generate Coverage Report
        run: dotnet reportgenerator -reports:artifacts/**/*.xml -targetdir:coveragereport -reporttypes:MarkdownSummaryGithub
      - name: Report Summary
        run: cat coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
